# Fichier : .github/workflows/deploy.yml
# Workflow optimisé pour un projet Next.js avec export statique

name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: ['master'] # notre branche est 'master'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Next.js a besoin de ce cache pour accélérer les builds
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-bottomNav-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build # Cette commande va générer le dossier 'out'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # ✅ C'est le dossier 'out' qui est uploadé, pas 'build' ou 'dist'
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
